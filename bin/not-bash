#!/usr/bin/env python3
from pathlib import Path
import os
import shutil
import sys
import re
import shlex
import subprocess

class P:
    def __init__(self, *, echo=True):
        self._echo = echo

    @property
    def silent(self):
        return P(echo = False)

    def __gt__(self, cmd):
        args = shlex.split(cmd)

        try:
            res = subprocess.check_output(args, text=True)
        except subprocess.CalledProcessError as e:
            eprint(f"\nFAILED:\n\n  {cmd}")
            exit(-1)

        if self._echo:
            print(res)

        return res

p = P()

def rm(path):
    shutil.rmtree(path, ignore_errors=True)

def mkdir(path):
    Path(path).mkdir(parents=True, exist_ok=True)

def cd(path):
    os.chdir(path)

def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)

def confirm(prompt):
    try:
        reply = input(f'  {prompt} ')
    except KeyboardInterrupt:
        return False
    return 'n' not in reply.lower()

def export(var, val):
    os.environ[var] = val

if len(sys.argv) > 1:
    _, script, *args = sys.argv
    exit = sys.exit
    exec(open(script).read())
else:
    import code
    code.interact(local=locals())

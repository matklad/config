{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "make.ts",
            "type": "shell",
            "command": "${workspaceFolder}/make.ts",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "group": "build",
            "problemMatcher": {
                "owner": "make.ts",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "^(ok\\.)?(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 2,
                    "line": 3,
                    "column": 4,
                    "severity": 5,
                    "message": 6
                }
            }
        },
        {
            "label": "zig build check",
            "type": "shell",
            "command": "${workspaceFolder}/zig/zig build check && echo 'ok.'",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "group": "build",
            "problemMatcher": {
                "owner": "make.ts",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "^(ok\\.)?(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 2,
                    "line": 3,
                    "column": 4,
                    "severity": 5,
                    "message": 6
                }
            }
        },
        {
            "label": "zig build test",
            "type": "shell",
            "command": "${workspaceFolder}/zig/zig build test  && echo 'ok.'",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "group": "build",
            "problemMatcher": {
                "owner": "make.ts",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "^(ok\\.)?(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 2,
                    "line": 3,
                    "column": 4,
                    "severity": 5,
                    "message": 6
                }
            }
        },
        {
            "label": "zig build ci",
            "type": "shell",
            "command": "${workspaceFolder}/zig/zig build ci && echo 'ok.'",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": true
            },
            "group": "build",
            "problemMatcher": {
                "owner": "make.ts",
                "fileLocation": [
                    "autoDetect",
                    "${workspaceFolder}"
                ],
                "pattern": {
                    "regexp": "^(ok\\.)?(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 2,
                    "line": 3,
                    "column": 4,
                    "severity": 5,
                    "message": 6
                }
            }
        },
        {
            "label": "run test at cursor",
            "command": "${command:testing.runAtCursor}",
            "problemMatcher": [
                "$deno"
            ]
        }
    ],
    "inputs": [
        {
            "id": "test-name",
            "description": "",
            "default": "",
            "type": "promptString"
        },
    ]
}

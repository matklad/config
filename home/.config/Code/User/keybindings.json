// Place your key bindings in this file to override the defaults
[
    // negative keys
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups",
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+o",
        "command": "file-browser.open"
    },
    // positive keys
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "ctrl+alt+right",
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "cursorWordPartStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "cursorWordPartStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "home",
        "command": "cursorHome",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+home",
        "command": "cursorHomeSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "home",
        "command": "cursorLineStart",
        "when": "editorTextFocus && editorHasSelection"
    },
    {
        "key": "shift+home",
        "command": "cursorLineStartSelect",
        "when": "editorTextFocus&& editorHasSelection"
    },
    {
        "key": "ctrl+u",
        "command": "rust-analyzer.parentModule",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+k k",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+k k",
        "command": "workbench.action.closeGroup",
        "when": "editorFocus && activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+k k",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+k u",
        "command": "references-view.find",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k k",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+k k",
        "command": "workbench.action.closeActiveEditor",
        "when": "!sideBarFocus && !panelFocus"
    },
    {
        "key": "ctrl+k 1",
        "command": "macros.closePanelCloseEditorsToggleSidebar",
        "when": "sidebarVisible && editorFocus"
    },
    {
        "key": "ctrl+k 1",
        "command": "macros.closePanelCloseEditors",
        "when": "!sidebarVisible && editorFocus"
    },
    {
        "key": "alt+1",
        "command": "macros.closePanelFocusFilesExplorer",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "filesExplorerFocus"
    },
    {
        "key": "alt+2",
        "command": "macros.focusPanelToggleSidebar",
        "when": "!panelFocus && sidebarVisible",
    },
    {
        "key": "alt+2",
        "command": "workbench.action.focusPanel",
        "when": "!panelFocus && !sidebarVisible",
    },
    {
        "key": "alt+2",
        "command": "workbench.action.togglePanel",
        "when": "panelFocus",
    },
    {
        "key": "alt+3",
        "command": "workbench.view.extension.references-view",
    },
    {
        "key": "alt+shift+2",
        "command": "workbench.action.toggleMaximizedPanel",
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.joinLines",
        "when": "editorLangId != 'rust'"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+b",
        "command": "editor.action.goToTypeDefinition",
        "when": "editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "alt+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+enter",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+.",
        "command": "-problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "alt+enter",
        "command": "settings.action.editFocusedSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+.",
        "command": "-settings.action.editFocusedSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "alt+8",
        "command": "search.action.focusNextSearchResult",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+w",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+k",
        "command": "extension.aceJump"
    },
    {
        "key": "ctrl+alt+z",
        "command": "git.revertSelectedRanges"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+k r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+k r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k r",
        "command": "debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "f2",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "ctrl+k r",
        "command": "debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "f2",
        "command": "-debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "ctrl+k r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "pageup",
        "command": "cursorMove",
        "args": {
            "by": "wrappedLine",
            "value": 36,
            "to": "up"
        },
        "when": "editorTextFocus"
    },
    {
        "key": "pagedown",
        "command": "cursorMove",
        "args": {
            "by": "wrappedLine",
            "value": 36,
            "to": "down"
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.focusNextGroup"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+shift+d",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "extension.aceJump.selection"
    },
    {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-insertDateString.insertDateTime",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "-insertDateString.insertOwnFormatDateTime",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k 3",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k 2",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k ctrl+shift+i",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cargo run --manifest-path ~/projects/nixpkgs-fmt/Cargo.toml -- --in-place ${file}\n"
        }
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+alt+b",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.output.action.clearOutput"
    },
    {
        "key": "alt+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+4",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k p",
        "command": "-workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "rust-analyzer.run"
    },
    {
        "key": "Enter",
        "command": "rust-analyzer.onEnter",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == rust"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
    },
    {
        "key": "ctrl+shift+f",
        "command": "search.action.openNewEditorToSide"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    }
]
